{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","Cardlist","map","Searchbox","placeholder","handlechange","type","onChange","App","e","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredmonster","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,SAASC,GAA3C,eACxB,6BAAKL,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,YCHdC,G,MAAW,SAACR,GAAD,OAChB,qBAAKC,UAAU,YAAf,SAEMD,EAAMI,SAASK,KAAI,SAAAL,GAAQ,OAAI,cAAC,EAAD,CAA0BA,SAAYA,GAAzBA,EAASC,WCHrDK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACtB,uBACIX,UAAY,SACZY,KAAO,SACPF,YAAeA,EACfG,SAAYF,MCmCLG,E,kDArCb,aAAc,IAAD,8BACX,gBAcFH,aAAe,SAACI,GACdA,EAAI,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAb1C,EAAKC,MAAQ,CACXjB,SAAW,GACXc,YAAc,IALL,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACb,SAAWsB,S,oBAQ3C,WAAS,IAAD,EAC2BC,KAAKN,MAA/BjB,EADD,EACCA,SAAWc,EADZ,EACYA,YACZU,EAAkBxB,EAASyB,QAAO,SAAAC,GAAO,OAAIA,EAAQxB,KAAKyB,cAAcC,SAASd,EAAYa,kBACnG,OACE,sBAAK9B,UAAU,MAAf,UACE,mDAEA,cAAC,EAAD,CACAU,YAAc,kBACdC,aAAgBe,KAAKf,eAErB,cAAC,EAAD,CAAUR,SAAYwB,W,GAhCZK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a5f81b07.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className= 'card-container'>\r\n        <img alt = 'monster' src = {`https://robohash.org/${props.monsters.id}?set=set2`}/>\r\n        <h1>{props.monsters.name}</h1>\r\n        <p>{props.monsters.email}</p>\r\n    </div>\r\n\r\n);","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.style.css';\r\n\r\nexport const Cardlist = (props) =>(\r\n        <div className='card-list'>\r\n            \r\n             {props.monsters.map(monsters => <Card key = {monsters.id} monsters = {monsters}></Card>)}\r\n            \r\n       </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\n export const Searchbox = ({placeholder, handlechange }) => (\r\n    <input\r\n        className = 'search'\r\n        type = 'search'\r\n        placeholder = {placeholder}\r\n        onChange = {handlechange}\r\n    />\r\n);","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Cardlist} from './components/card-list/card-list.components';\nimport {Searchbox} from './components/search-box/search-box.components';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters : [],\n      searchfield : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}))\n  }\n\n  handlechange = (e) =>{\n    e = this.setState({searchfield : e.target.value});\n  };\n\n\n  render(){\n    const {monsters , searchfield} = this.state ;\n    const filteredmonster = monsters.filter(monster => monster.name.toLowerCase().includes(searchfield.toLowerCase()));\n    return(\n      <div className=\"App\"  >\n        <h1>Monsters -Rolodex</h1>\n        \n        <Searchbox \n        placeholder = 'search monsters'\n        handlechange = {this.handlechange}\n        />\n        <Cardlist monsters = {filteredmonster}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}